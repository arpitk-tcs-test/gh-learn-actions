name: CI
on:
  push:
    branches:
      - dev
    paths:
      - 'src/main/resources/application.yaml'
jobs:
  Job1:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Archive Application Yaml
        uses: actions/upload-artifact@v3
        with:
            name: yaml
            path: src/main/resources/application.yaml
      - name: Download the release artifact
        uses: actions/download-artifact@v2
        with:
          name: yaml
      - name: Upload Yaml
        uses: actions/upload-artifact@v3
        with:
          name: yaml
          path: src/main/resources/application.yaml
#      - name: 'Get Previous tag'
#        id: previoustag
#        uses: "WyriHaximus/github-action-get-previous-tag@v1"
#        with:
#          fallback: 1.0.0
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set outputs
        id: vars2
        run: echo "sha_short2=$( git show -s --format='%h_%s)" >> $GITHUB_OUTPUT
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
#      - id: define_image_tag
#        name: Define image tag
#        env:
#          TAG: ${{ steps.previoustag.outputs.tag }}
#        run: |
#          # Strip v in tag e.g v1.0.0 -> 1.0.0
#          VERSION=$(echo $TAG|tr -d 'v')
#          echo "tag=${VERSION}|${{ steps.vars.outputs.sha_short }}" >> $GITHUB_OUTPUT
      - name: Send pull-request
        run: |
          LATEST_TAG=$(git describe --tags --always --abbrev=0)
          REPOSITORY="arpitk-tcs-test/gh-second"
          FOLDER="bin/$REPOSITORY"
          BRANCH_NAME=${{ steps.vars2.outputs.sha_short2 }}


          # Clone the remote repository and change working directory to the
          # folder it was cloned to.
          git clone \
            --depth=1 \
            https://some-user:${{ secrets.TOKEN }}@github.com/$REPOSITORY \
            $FOLDER
          
          cd $FOLDER
          
          # Setup the committers identity.
          git config user.email "arpit.kumawat@tcs.com"
          git config user.name "arpitk-tcs-test"
          
          # Create a new feature branch for the changes.
          git checkout -b $BRANCH_NAME
          
          echo "src/main/resources/application.yaml"
          # Update the script files to the latest version.
          cp -R ../../../src/main/resources/application.yaml yaml 
          
          # Commit the changes and push the feature branch to origin
          git pull
          git add .
          git commit -m "chore: update scripts to $LATEST_TAG"
          git push -f origin $BRANCH_NAME
          
          # Store the PAT in a file that can be accessed by the
          # GitHub CLI.
          echo "${{ secrets.TOKEN }}" > token.txt
          
          # Authorize GitHub CLI for the current repository and
          # create a pull-requests containing the updates.
          gh auth login --with-token < token.txt
          gh pr create \
            --body "" \
            --title "Update Yaml from ${{ steps.vars2.outputs.sha_short2 }} repo to $LATEST_TAG" \
            --head "$BRANCH_NAME" \
            --base "master"