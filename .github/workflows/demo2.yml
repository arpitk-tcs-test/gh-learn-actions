name: CI
on:
  push:
    branches:
      - dev
    paths:
      - 'src/main/resources/application.yaml'
jobs:
  Job1:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Archive Application Yaml
        uses: actions/upload-artifact@v3
        with:
            name: yaml
            path: src/main/resources/application.yaml
      - name: Download the release artifact
        uses: actions/download-artifact@v2
        with:
          name: yaml
#      - name: checkout Upload Artifact to if Dev exist
#        uses: actions/checkout@v3
#        with:
#          repository: arpitk-tcs-test/gh-second
#          path: gh-second
#          ref: dev
      - name: Upload Yaml
        uses: actions/upload-artifact@v3
        with:
          name: yaml
          path: src/main/resources/application.yaml
#      - name: Create pull request
#        uses: paygoc6/action-pull-request-another-repo@v1.0.1
#        env:
#            API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
#        with:
#            source_folder: 'src/main/resources/application.yaml'
#            destination_repo: 'arpitk-tcs-test/gh-second'
#            destination_folder: 'resources'
#            destination_base_branch: 'master'
#            destination_head_branch: 'dev'
#            user_email: 'arpit.kumawat@tcs.com'
#            user_name: 'arpitk-tcs-test'
#            pull_request_reviewers: 'reviewers'
#            pr_title: 'feat: the pr title'
#      - name: Checkout code
#        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
#        with:
#          fetch-depth: 0 # Checkout everything to get access to the tags
#          ref: ${{github.event.pull_request.head.ref}}
#          repository: ${{github.event.pull_request.head.repo.full_name}}
#          token: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0
      - id: define_image_tag
        name: Define image tag
        env:
          TAG: ${{ steps.previoustag.outputs.tag }}
        run: |
          # Strip v in tag e.g v1.0.0 -> 1.0.0
          VERSION=$(echo $TAG|tr -d 'v')
          echo "tag=${VERSION}-${GITHUB_SHA:0:5}" >> $GITHUB_OUTPUT
          #echo "tag=${VERSION}" >> $GITHUB_OUTPUT
      - name: Send pull-request
        run: |
          LATEST_TAG=$(git describe --tags --always --abbrev=0)
          REPOSITORY="arpitk-tcs-test/gh-second"
          FOLDER="bin/$REPOSITORY"
          # BRANCH_NAME=$(echo ${{ steps.generate-uuid.outputs.uuid }})
          # BRANCH_NAME=dev
          # BRANCH_NAME=$(echo ${{ inputs.github_ref }}|tr '[A-Z]' '[a-z]'|cut -d"/" -f3|sed 's/_/-/g')
          BRANCH_NAME=${{ steps.previoustag.outputs.tag }}


          # Clone the remote repository and change working directory to the
          # folder it was cloned to.
          git clone \
            --depth=1 \
            https://some-user:${{ secrets.TOKEN }}@github.com/$REPOSITORY \
            $FOLDER
          
          cd $FOLDER
          
          # Setup the committers identity.
          git config user.email "arpit.kumawat@tcs.com"
          git config user.name "arpitk-tcs-test"
          
          # Create a new feature branch for the changes.
          git checkout -b $BRANCH_NAME
          
          echo "src/main/resources/application.yaml"
          # Update the script files to the latest version.
          cp -R ../../../src/main/resources/application.yaml yaml 
          
          # Commit the changes and push the feature branch to origin
          git pull
          git add .
          git commit -m "chore: update scripts to $LATEST_TAG"
          git push -f origin $BRANCH_NAME
          
          # Store the PAT in a file that can be accessed by the
          # GitHub CLI.
          echo "${{ secrets.TOKEN }}" > token.txt
          
          # Authorize GitHub CLI for the current repository and
          # create a pull-requests containing the updates.
          gh auth login --with-token < token.txt
          gh pr create \
            --body "" \
            --title "Update Yaml from other repo to $LATEST_TAG" \
            --head "$BRANCH_NAME" \
            --base "master"